/*
Рассмотрим перестановку чисел длины N
Перестановкой чисел называется последовательность целых чисел от 1 до N,
в которой каждое число встречается ровно один раз.

Подотрезком последовательности A называется последовательность чисел,
получаемая из A путём отбрасывания некоторого (возможно, нулевого)
количества чисел из начала и конца последовательности.
Медианой последовательности нечетной длины называется такое число,
которое будет стоять на центральном месте после сортировки последовательности.

Например, в последовательности [7,1,20] медианой является число 7.
Определите количество подотрезков заданной перестановки,
 имеющих нечетную длину, медиана которых в точности равна заданному числу
B.
*/

package main

import (
	"fmt"
)

func result(N int, B int, A []int) int {
	aLen := len(A)
	bInd := 0
	for i := 0; i < aLen; i++ {
		if A[i] == B {
			bInd = i
		}
	}
	if bInd == 0 || bInd == aLen-1 {
		return 1
	}

	numsAfter := aLen - bInd - 1
	if numsAfter == bInd {
		return numsAfter + 1
	}
	if numsAfter < bInd {
		return numsAfter + 1
	} else {
		return bInd + 1

	}
}

func main() {
	var N, B int
	// N = 7
	// B = 4
	// C := []int{5, 7, 2, 4, 3, 1, 6}
	_, err := fmt.Scan(&N, &B)
	if err != nil {
		fmt.Println("Ошибка ввода:", err)
		return
	}

	A := make([]int, N)
	for i := 0; i < N; i++ {
		var num int
		fmt.Scan(&num)
		A[i] = num
	}
	result := result(N, B, C)
	fmt.Println(result)
}
